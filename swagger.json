{
  "swagger": "2.0",
  "info": {
    "description": "Swagger RESTful API for Binar Challenge 8",
    "version": "1.0.0",
    "title": "Binar Challenge Chapter 8"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "API Documentation Ch8",
      "description": "Everything about players"
    }
  ],
  "paths": {
    "/players": {
      "post": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Create a new player",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Player's Data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "$ref": "#/definitions/PlayerBody"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "username or email or password field cannot be empty."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Some error occurred while creating the Player."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Find all of the players",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The player username",
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The player email",
            "type": "string"
          },
          {
            "name": "experience",
            "in": "query",
            "description": "The player experience",
            "type": "string"
          },
          {
            "name": "lvl",
            "in": "query",
            "description": "The player level",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "$ref": "#/definitions/PlayerBody"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Some error occured while retrieving players."
                }
              }
            }
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Find player by ID",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "$ref": "#/definitions/PlayerBody"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Error retrieving Player with id={id}"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Update a player by the ID in the request.",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The player to update",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "type": "string",
                  "example": "Player was updated successfully."
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot update Player with id={id}. Maybe Player was not found or req.body is empty!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Error updating Player with id={id}"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Delete a player with ID",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Player id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "type": "string",
                  "example": "Player was deleted successfully!"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot delete Player with id={id}. Maybe Player was not found!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Could not delete Player with id={id}"
                }
              }
            }
          }
        }
      }
    },
    "/players/exp/{id}": {
      "post": {
        "tags": [
          "API Documentation Ch8"
        ],
        "summary": "Add experience to a player",
        "description": "",
        "consumes": [
          "application/x-www.form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Player ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The experience of player to create.",
            "schema": {
              "type": "object",
              "required": [
                "experience"
              ],
              "properties": {
                "experience": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "type": "string",
                  "example": "Player with id={id} has more experience."
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "exp field cannot be empty."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Error updating Player exp with id={id}"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PlayerBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "experience": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Player"
      }
    },
    "Player": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password",
        "lvl"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "Irene"
        },
        "email": {
          "type": "string",
          "example": "irene@redvelvet.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "experience": {
          "type": "integer",
          "example": "12"
        },
        "lvl": {
          "type": "integer",
          "example": "2"
        }
      },
      "xml": {
        "name": "PlayerBody"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}